# The format of this file isn't really documented; just use --generate-rcfile
# This specific file was last tested against pylint==1.6.4,
# ymmv on other versions.

[MASTER]
# Use multiple processes to speed up Pylint.
jobs=4

[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"
disable=
    # abstract classes are often useful as interface descriptions
    abstract-class-little-used,
    # No, you just missed it.
    abstract-class-not-used,
    # seriously, sometimes you need to catch all exceptions
    broad-except,
    # detection of this doesn't work well, mostly catches imports anyway
    duplicate-code,
    # why are you throwing warnings about todos
    fixme,
    # I locally-disabled/enabled it INTENTIONALLY
    locally-disabled,
    locally-enabled,
    # docstrings on everything?
    missing-docstring,
    # if it were supposed to be a function, it would have been
    no-self-use,
    # seriously, does no one write wrapper functions
    star-args,
    # hurts readability more than it helps
    bad-whitespace,
    # disallows lisp-style indentation
    bad-continuation,
    # buggy test / breaks on enum34 enums
    unsubscriptable-object,
    # buggy test / enums in particular, but more
    redefined-variable-type,
    # this test is oversensitive, we have unit tests
    cyclic-import,
    # we test the versions we care about, so this warning is useless
    deprecated-method,
    # too-many / too-few - stop making stylistic decisions, pylint
    too-few-public-methods,
    too-many-arguments,
    too-many-branches,
    too-many-instance-attributes,
    too-many-locals,
    too-many-public-methods,
    too-many-return-statements,
    too-many-statements,
    # this breaks alphabetical order
    ungrouped-imports,
    # if type inference fails, don't false-positive
    maybe-no-member


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages
reports=no

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
msg-template={path}:{line}: [{msg_id}({symbol}), {obj}] {msg}


[VARIABLES]

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=(_+[a-zA-Z0-9_]*?$)|dummy



[BASIC]

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_,application,Input,_Input,pytestmark

# many valid, obvious 2-character arguments (ip, fn, etc)
# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{1,30}$

# inference here fails all the time, so allow lowercase
# Regular expression matching correct constant names
const-rgx=(([A-Z_][A-Za-z0-9_]*)|(__.*__))$

# longer class attributes are fine
# Regular expression matching correct class attribute names
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,50}|(__.*__))$

# test method names can be quite long
# Regular expression matching correct method names
method-rgx=[a-z_][a-z0-9_]{2,60}$

# test function names can be quite long
# Regular expression matching correct function names
function-rgx=[a-z_][a-z0-9_]{2,60}$

# many valid, obvious 2-character variables (ip, fn, etc)
# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{0,30}$

[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

# Maximum number of lines in a module
max-module-lines=10000

[TYPECHECK]

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=sh


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp,initialize
